#17022022
Se dovessimo usare:
#define ABP_ADI_INPUT_TECNA              ABP_APPD_DESCR_SET_ACCESS |  \
                                            ABP_APPD_DESCR_MAPPABLE_WRITE_PD 
Effettivamente la mappatura nel file sdo è solo di tipo write ma non mi cambia nulla per il simpleTest

Utilizzando AD_MAP_PAD_ADI piuttosto che AD_MAP_ALL_ELEM dovremmo forzare il numero di bit effettivamente da mappare
Vediamo se fa differenza e se c'è un bug qui
@tag_1702_00: 
Use of AD_MAP_PAD_ADI

Abbiamo verificato che l'uso di AD_MAP_PAD_ADI è corretta ma non porta benefici al simpleTest.

Verifico se queste impostazioni funzionano col Codesys
Creando il nuovo file XML tramite l'ESI generator ho in effetti molte discrepanze rispetto a quello fornito da
 HMS. Certo lo stack è cambiato molto e pare anche la versione dell'ESI generator
La mia è 1.8.0.0 mentre quella del XML fornito 1.7.1

Vado a provarlo
Dal test mi pare che questo XML mi produca un AL Status read from slave address 1001 status 16#24 : Invalid input mapping

Faccio quindi un passo indietro
@tag_1702_01: Restore simple example changing name and number of variables

Ora con il codesys riesco a leggere ma il debug non mi funziona.
E' possibile che sia qualcosa di mancante nello stack dovuto alle mie precedenti
modifiche. 
Faccio il commit di questa situazione e verifico la mail del supporto.

@tag_1702_02
Verifyng HMS support info
1) Enable SPEED_TEST
2) Switch on support for the EtherCAT host application object in abcc_adapt/abcc_obj_cfg.h:
#ifndef ECT_OBJ_ENABLE
   #define ECT_OBJ_ENABLE                          TRUE
3)Disable EoE like this:
/*
** Attribute 17: Enable EoE (BOOL - TRUE/FALSE)
*/
#ifndef ECT_IA_ENABLE_EOE_ENABLE
   #define ECT_IA_ENABLE_EOE_ENABLE                TRUE
   #define ECT_IA_ENABLE_EOE_VALUE                 FALSE
#endif
4) set all EtherCAT identification attributes to their default values by disabling them in abcc_adapt/abcc_identification.h
(Era già fatto. Quindi non è taggato)

La compilazione è ok ma ci sono errori nell'applicazione a run time
Forse manca questo setting che originariamente c'era e che era il sospettato
anche per il fallimento del debug codesys dell'altra prova:
APP_OBJ_ENABLE TRUE

Ripristino anche #define AD_IA_MIN_MAX_DEFAULT_ENABLE            ( FALSE )
che avevo abilitato per il BACNET

Riavvio il sistema completamente
Ora sul branch newdevel va bene.
Ci deve essere un problema quando lancio il Codesys. O si fa Codesys o si fa SOEM

A questo punto ritorno sul branch develNewApp
Sta andando.

@tag_1702_03
Verifying tecna app against simple test

@tag_1702_04
Voglio verificare 2 cose:
1) Vedere se effettivamente
APP_OBJ_ENABLE TRUE è determinante nel funzionamento del test
Mi sembra di no.
2) Vedere se riesco a creare un ESI compatibile col codesys

Una volta ricostruito l'ESI file e mappato sul codesys riesco a forzare le variabili e quindi l'applicazione possiamo dire che sta in piedi correttamente.





#16022022
@tag_1602_00:
Modifiche per leggere in automatico dallo speed example, la revisione di prodotto
@tag_1602_01:
Creazione nuova applicazione di test appl_adimap_tecna.c
@tag_1602_02:
The ADI access descriptor values cannot be changed:
Input ADIs: 09h (Get access + Write process data mapping possible).
Output ADIs: 11h (Get access + Read process data mapping possible)
Dal manuale estraggo quanto sopra. 
@tag_1602_03:
Mi sembra che manchi il set nella parte di input. Lo inserisco
Però non mi tornano i conti. Vedo nel mapping accessi non congruenti
Invertendo INPUT con OUTPUT in rif a speed a refspeed ora ottengo risultati
congruenti in:
0x2001      "SPEED"                                       [VAR]
    0x00      "SPEED"                                       [UNSIGNED16       R_R_R_]      0x0000 / 0
0x2002      "REF_SPEED"                                   [VAR]
    0x00      "REF_SPEED"                                   [UNSIGNED16       RWRWRW]      0x0000 / 0

Quindi SPEED è R_R_R_ e REF_SPEED RWRWRW come dovrebbe essere.
Resta il fatto che al primo giro (all'accensione della board) ho sempre un errore nella mappatura

0x2001      "SPEED"                                       [VAR]
    0x00      "SPEED"                                       [UNSIGNED16       R_R_R_]      0x0000 / 0
0x2002      "REF_SPEED"                                   [VAR]
- Time:1645017072.835 PACKET slave:1 index:2002.00 error:1

Questo è il mapping dell' esempio base
const AD_AdiEntryType APPL_asAdiEntryList[] =
 {
    {  0x1,  "SPEED",     ABP_UINT16,   1, APPL_WRITE_MAP_READ_ACCESS_DESC, { { &appl_iSpeed,    &appl_sUint16Prop } } },
    {  0x2,  "REF_SPEED", ABP_UINT16,   1, APPL_READ_MAP_WRITE_ACCESS_DESC, { { &appl_iRefSpeed, &appl_sUint16Prop } } }
 };

APPL_WRITE_MAP_READ_ACCESS_DESC ( ABP_APPD_DESCR_GET_ACCESS | ABP_APPD_DESCR_MAPPABLE_WRITE_PD ) 					---> Speed
APPL_READ_MAP_WRITE_ACCESS_DESC ( ABP_APPD_DESCR_GET_ACCESS | ABP_APPD_DESCR_SET_ACCESS |  ABP_APPD_DESCR_MAPPABLE_READ_PD )		---> RefSpeed

ABP_ADI_OUTPUT_TECNA             ABP_APPD_DESCR_GET_ACCESS | ABP_APPD_DESCR_MAPPABLE_READ_PD  						---> Speed
ABP_ADI_INPUT_TECNA              ABP_APPD_DESCR_GET_ACCESS | ABP_APPD_DESCR_SET_ACCESS | ABP_APPD_DESCR_MAPPABLE_WRITE_PD 		---> RefSpeed

Per tutti vale (tecna e simpleExample)
const AD_MapType APPL_asAdObjDefaultMap[] =
{
   { 1, PD_WRITE, AD_MAP_ALL_ELEM, 0 },
   { 2, PD_READ,  AD_MAP_ALL_ELEM, 0 },
   { AD_MAP_END_ENTRY }
};


Nel tecna.c

onst AD_AdiEntryType APPL_asAdiEntryList[] =
{
   {  0x1,  "SPEED",     ABP_UINT16,   1, ABP_ADI_OUTPUT_TECNA, { { &appl_iSpeed,    &appl_sUint16Prop } } },
   {  0x2,  "REF_SPEED", ABP_UINT16,   1, ABP_ADI_INPUT_TECNA, { { &appl_iRefSpeed, &appl_sUint16Prop } } }
};


const AD_AdiEntryType APPL_asAdiEntryList[] =
{

   {  0x1,  "SPEED",     ABP_UINT16,   1, APPL_WRITE_MAP_READ_ACCESS_DESC, { { &appl_iSpeed,    &appl_sUint16Prop } } },
   {  0x2,  "REF_SPEED", ABP_UINT16,   1, APPL_READ_MAP_WRITE_ACCESS_DESC, { { &appl_iRefSpeed, &appl_sUint16Prop } } }
};
/*------------------------------------------------------------------------------
** Map all adi:s in both directions
**------------------------------------------------------------------------------
** 1. AD instance | 2. Direction | 3. Num elements | 4. Start index |
**------------------------------------------------------------------------------
*/
const AD_MapType APPL_asAdObjDefaultMap[] =
{
   { 1, PD_WRITE, AD_MAP_ALL_ELEM, 0 },
   { 2, PD_READ,  AD_MAP_ALL_ELEM, 0 },
   { AD_MAP_END_ENTRY }
};




